@model  Models.ViewModels.ProductEditViewModel

@{
    ViewBag.Title = "Edit Product";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.ProductId)

<div class="form-horizontal">
    <h4>Edit Product</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(m => m.ProductName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Price, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ProductImg, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="ProductImg" class="form-control" />
            @if (!string.IsNullOrEmpty(Model.ProductImg))
                {
            <p>Current image:</p>
            <img src="~/Assets/Img_Products/@Model.ProductImg" alt="Product Image" style="max-height:150px;" />
                }
            @Html.ValidationMessageFor(m => m.ProductImg, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.BrandId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.BrandId, Model.BrandList, "-- Choose Brand --", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BrandId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CategoryId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.CategoryId, Model.CategoryList, "-- Choose Category --", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Stock, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Stock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Stock, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Rating, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Rating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.CreatedAt, new {
                @class = "form-control",
                type = "datetime-local"
            })
            @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save Changes" class="btn btn-primary" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
</div>
}
